import {
    AsyncController,
    CancelableCommand,
    Combobox,
    command,
    download,
    I18n,
    IApplication,
    ICommand,
    Property,
    PubSub,
    readFilesAsync,
} from "luminicad-core";
import { SelectNodeStep } from "../step";
import { importFiles } from "../utils";

@command({
    name: "file.import",
    display: "command.import",
    icon: `<svg viewBox="0 0 512 512" fill="none">
        <path d="m435.144 89.464-74.849-74.849c-4.556-4.555-10.736-7.115-17.179-7.115h-184.295c-4.473 0-8.098 3.626-8.098 8.098v135.964l15.49 9.206v231.879h190.541l7.819 11.667h69.589c4.473 0 8.098-3.626 8.098-8.098v-289.572c0-6.444-2.56-12.623-7.116-17.18z" fill="#ECEAEC"></path>
        <path d="m175.017 355.725v-348.225h-16.197c-4.473 0-8.098 3.626-8.098 8.098v380.618c0 4.473 3.626 8.098 8.098 8.098h275.341c4.473 0 8.098-3.626 8.098-8.098v-16.196h-242.947c-13.417 0-24.295-10.877-24.295-24.295z" fill="#DBD8DB"></path>
        <path d="m320.786 323.332h-234.85c-8.945 0-16.197-7.251-16.197-16.197v-105.277c0-8.945 7.251-16.197 16.197-16.197h234.85c8.945 0 16.197 7.251 16.197 16.197v105.277c0 8.946-7.252 16.197-16.197 16.197z" fill="#1F77B4" opacity="0.7"></path>
        <path d="m320.786 436.708v-72.884c0-4.473-3.626-8.098-8.098-8.098h-32.393c-4.473 0-8.098 3.626-8.098 8.098v72.884h-15.835c-6.739 0-10.53 7.751-6.392 13.07l40.13 51.595c3.242 4.169 9.543 4.169 12.785 0l40.13-51.595c4.137-5.319.347-13.07-6.392-13.07z" fill="#808080"></path>
        <path d="m440.448 84.162-74.85-74.849c-6.005-6.006-13.99-9.313-22.482-9.313h-184.295c-8.601 0-15.598 6.997-15.598 15.598v137.671c0 4.142 3.358 7.5 7.5 7.5s7.5-3.358 7.5-7.5v-137.671c0-.33.269-.598.598-.598h184.295c.868 0 1.721.085 2.563.213v73.269c0 8.601 6.997 15.598 15.598 15.598h73.27c.128.842.213 1.695.213 2.563v289.573c0 .33-.269.598-.599.598h-80.982c-4.142 0-7.5 3.358-7.5 7.5s3.358 7.5 7.5 7.5h80.982c8.601 0 15.599-6.997 15.599-15.598v-289.572c0-8.493-3.307-16.477-9.312-22.482zm-79.769 4.321v-62.877l63.475 63.474h-62.876c-.33.001-.599-.268-.599-.597z" fill="#808080"></path>
        <path d="m344.482 307.136v-105.278c0-13.066-10.63-23.697-23.696-23.697h-234.849c-13.066 0-23.697 10.63-23.697 23.697v105.277c0 13.066 10.63 23.697 23.697 23.697h234.85c13.066 0 23.695-10.63 23.695-23.696zm-267.242 0v-105.278c0-4.795 3.901-8.697 8.697-8.697h234.85c4.795 0 8.696 3.901 8.696 8.697v105.277c0 4.795-3.901 8.697-8.696 8.697h-234.85c-4.796 0-8.697-3.901-8.697-8.696z" fill="#808080"></path>
        <path d="m336.621 429.208h-8.335v-65.384c0-8.601-6.997-15.598-15.598-15.598h-32.393c-8.601 0-15.599 6.997-15.599 15.598v65.384h-8.335c-6.004 0-11.374 3.351-14.012 8.745s-1.987 11.689 1.7 16.43l40.13 51.595c2.977 3.827 7.464 6.022 12.312 6.022 4.849 0 9.336-2.195 12.312-6.022l40.13-51.596c3.687-4.74 4.337-11.035 1.699-16.43-2.637-5.393-8.007-8.744-14.011-8.744zm.473 15.966-40.13 51.595c-.049.063-.18.231-.473.231-.292 0-.423-.168-.472-.231l-40.129-51.595c-.091-.117-.229-.295-.065-.631.164-.335.389-.335.537-.335h15.835c4.142 0 7.5-3.358 7.5-7.5v-72.884c0-.33.269-.598.599-.598h32.393c.33 0 .598.269.598.598v72.884c0 4.142 3.358 7.5 7.5 7.5h15.835c.149 0 .374 0 .538.335s.025.514-.066.631z" fill="#808080"></path>
    </svg>`,
})
export class Import implements ICommand {
    async execute(application: IApplication): Promise<void> {
        const extenstions = application.dataExchange.importFormats().join(",");
        const files = await readFilesAsync(extenstions, true);
        if (!files.isOk || files.value.length === 0) {
            alert(files.error);
            return;
        }
        importFiles(application, files.value);
    }
}

@command({
    name: "file.export",
    display: "command.export",
    icon: `<svg viewBox="0 0 512 512" fill="none">
        <path d="m435.144 89.464-74.849-74.849c-4.556-4.555-10.736-7.115-17.179-7.115h-184.295c-4.473 0-8.098 3.626-8.098 8.098v135.964l15.49 9.206v231.879h190.541l7.819 11.667h69.589c4.473 0 8.098-3.626 8.098-8.098v-289.572c0-6.444-2.56-12.623-7.116-17.18z" fill="#ECEAEC"></path>
        <path d="m175.017 355.725v-348.225h-16.197c-4.473 0-8.098 3.626-8.098 8.098v380.618c0 4.473 3.626 8.098 8.098 8.098h275.341c4.473 0 8.098-3.626 8.098-8.098v-16.196h-242.947c-13.417 0-24.295-10.877-24.295-24.295z" fill="#DBD8DB"></path>
        <path d="m320.786 323.332h-234.85c-8.945 0-16.197-7.251-16.197-16.197v-105.277c0-8.945 7.251-16.197 16.197-16.197h234.85c8.945 0 16.197 7.251 16.197 16.197v105.277c0 8.946-7.252 16.197-16.197 16.197z" fill="#1F77B4" opacity="0.7"></path>
        <path d="m320.786 436.708v-72.884c0-4.473-3.626-8.098-8.098-8.098h-32.393c-4.473 0-8.098 3.626-8.098 8.098v72.884h-15.835c-6.739 0-10.53 7.751-6.392 13.07l40.13 51.595c3.242 4.169 9.543 4.169 12.785 0l40.13-51.595c4.137-5.319.347-13.07-6.392-13.07z" fill="#808080" transform="rotate(180 320.786 465.5)"></path>
        <path d="m440.448 84.162-74.85-74.849c-6.005-6.006-13.99-9.313-22.482-9.313h-184.295c-8.601 0-15.598 6.997-15.598 15.598v137.671c0 4.142 3.358 7.5 7.5 7.5s7.5-3.358 7.5-7.5v-137.671c0-.33.269-.598.598-.598h184.295c.868 0 1.721.085 2.563.213v73.269c0 8.601 6.997 15.598 15.598 15.598h73.27c.128.842.213 1.695.213 2.563v289.573c0 .33-.269.598-.599.598h-80.982c-4.142 0-7.5 3.358-7.5 7.5s3.358 7.5 7.5 7.5h80.982c8.601 0 15.599-6.997 15.599-15.598v-289.572c0-8.493-3.307-16.477-9.312-22.482zm-79.769 4.321v-62.877l63.475 63.474h-62.876c-.33.001-.599-.268-.599-.597z" fill="#808080"></path>
        <path d="m344.482 307.136v-105.278c0-13.066-10.63-23.697-23.696-23.697h-234.849c-13.066 0-23.697 10.63-23.697 23.697v105.277c0 13.066 10.63 23.697 23.697 23.697h234.85c13.066 0 23.695-10.63 23.695-23.696zm-267.242 0v-105.278c0-4.795 3.901-8.697 8.697-8.697h234.85c4.795 0 8.696 3.901 8.696 8.697v105.277c0 4.795-3.901 8.697-8.696 8.697h-234.85c-4.796 0-8.697-3.901-8.697-8.696z" fill="#808080"></path>
        <path d="m336.621 429.208h-8.335v-65.384c0-8.601-6.997-15.598-15.598-15.598h-32.393c-8.601 0-15.599 6.997-15.599 15.598v65.384h-8.335c-6.004 0-11.374 3.351-14.012 8.745s-1.987 11.689 1.7 16.43l40.13 51.595c2.977 3.827 7.464 6.022 12.312 6.022 4.849 0 9.336-2.195 12.312-6.022l40.13-51.596c3.687-4.74 4.337-11.035 1.699-16.43-2.637-5.393-8.007-8.744-14.011-8.744zm.473 15.966-40.13 51.595c-.049.063-.18.231-.473.231-.292 0-.423-.168-.472-.231l-40.129-51.595c-.091-.117-.229-.295-.065-.631.164-.335.389-.335.537-.335h15.835c4.142 0 7.5-3.358 7.5-7.5v-72.884c0-.33.269-.598.599-.598h32.393c.33 0 .598.269.598.598v72.884c0 4.142 3.358 7.5 7.5 7.5h15.835c.149 0 .374 0 .538.335s.025.514-.066.631z" fill="#808080" transform="rotate(180 320.786 465.5)"></path>
    </svg>`,
})
export class Export extends CancelableCommand {
    @Property.define("file.format")
    public get formats() {
        return this.getPrivateValue("formats", this.initCombobox());
    }
    public set formats(value: Combobox<string>) {
        this.setProperty("formats", value);
    }

    private initCombobox() {
        const box = new Combobox<string>();
        box.items.push(...this.application.dataExchange.exportFormats());
        return box;
    }

    protected async executeAsync() {
        const nodes = await this.selectNodesAsync();
        if (!nodes || nodes.length === 0) {
            PubSub.default.pub("showToast", "toast.select.noSelected");
            return;
        }

        PubSub.default.pub(
            "showPermanent",
            async () => {
                const format = this.formats.selectedItem;
                if (format === undefined) return;

                const data = await this.application.dataExchange.export(format, nodes);
                if (!data) return;

                PubSub.default.pub("showToast", "toast.downloading");
                download(data, `${nodes[0].name}${format}`);
            },
            "toast.excuting{0}",
            I18n.translate("command.export"),
        );
    }

    private async selectNodesAsync() {
        this.controller = new AsyncController();
        const step = new SelectNodeStep("prompt.select.models", true);
        const data = await step.execute(this.application.activeView?.document!, this.controller);
        if (!data?.nodes) {
            PubSub.default.pub("showToast", "prompt.select.noModelSelected");
            return undefined;
        }
        return data.nodes;
    }
}
