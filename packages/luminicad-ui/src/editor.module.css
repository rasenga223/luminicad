.root {
    width: 100%;
    height: 100%;
    position: relative;
    display: flex;
    flex-direction: column;
    background-color: var(--background-color);
}

.content {
    display: flex;
    flex-direction: row;
    justify-content: stretch;
    flex: 1 1 auto;
    height: 0;
    position: relative;

    & .sidebar {
        display: flex;
        flex-direction: column;
        flex: 0 0 360px;
        background-color: var(--panel-background-color);
        box-shadow: 2px 0 8px var(--shadow-color);
        border-right: 1px solid var(--border-color);
        margin-left: 48px;
        z-index: 10;

        & .sidebarItem {
            margin-top: 10px;
            flex: 1 1 auto;
            height: 0;
            color: var(--text-color);
        }
    }

    & .viewport {
        flex: 1 1 auto;
        width: 0;
        background-color: var(--viewport-background-color);
        /* Define CSS variables for the grid properties. */
        /* Updated for a more spacious and subtle modern/techy look. */
        /* --grid-size-minor: 20px; */ /* Removed, will be handled by Three.js */
        /* --grid-size-major: 100px; */ /* Removed, will be handled by Three.js */
        /* Grid colors are derived from the primary color with even lower opacity for a more subtle effect. */
        /* These RGBA values correspond to #E5A100 (primary-color) */
        /* --grid-color-minor: rgba(229, 161, 0, 0.04); */ /* Removed, will be handled by Three.js */
        /* --grid-color-major: rgba(229, 161, 0, 0.08); */ /* Removed, will be handled by Three.js */

        /* Apply multiple linear gradients to create the grid pattern. */
        /* Minor grid lines */
        /* background-image:
            linear-gradient(to right, var(--grid-color-minor) 1px, transparent 1px),
            linear-gradient(to bottom, var(--grid-color-minor) 1px, transparent 1px),
            linear-gradient(to right, var(--grid-color-major) 1px, transparent 1px),
            linear-gradient(to bottom, var(--grid-color-major) 1px, transparent 1px); */

        /* Define the size for each set of grid lines. */
        /* background-size:
            var(--grid-size-minor) var(--grid-size-minor),
            var(--grid-size-minor) var(--grid-size-minor),
            var(--grid-size-major) var(--grid-size-major),
            var(--grid-size-major) var(--grid-size-major); */

        /* Offset background position slightly to ensure lines are sharp and align well. */
        /* background-position: -1px -1px, -1px -1px, -1px -1px, -1px -1px; */
    }
}

.statusbar {
    height: 24px;
    display: flex;
    flex-direction: column;
    background-color: var(--statusbar-background-color);
    color: var(--statusbar-foreground-color);
    border-top: 1px solid var(--border-color);
}

.chatArea {
    position: relative;
    height: 100%;
    display: flex;
    background-color: var(--panel-background-color);
}

.chatContainer {
    /* Set minimum width to 20% of editor for compact mode. */
    min-width: 20vw;
    /* Set maximum width to 40% of editor for usability. */
    max-width: 40vw;
    /* Default width is 35% of editor for balanced layout. */
    width: 35vw;
    position: relative;
    display: flex;
    flex-shrink: 0;
    background-color: var(--panel-background-color);
    border-left: 1px solid var(--border-color);
    box-shadow: -2px 0 8px var(--shadow-color);
}

.leftSidebar {
    position: fixed;
    left: 0;
    top: 50%;
    transform: translateY(-50%);
    display: flex;
    flex-direction: column;
    gap: 8px;
    padding: 8px;
    background-color: var(--background-color);
    border-radius: 0 8px 8px 0;
    border: 1px solid var(--border-color);
    border-left: none;
    box-shadow: 2px 0 8px var(--shadow-color);
    z-index: 20;
    width: 36px;
}

.sidebarButton {
    width: 36px;
    height: 36px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 8px;
    cursor: pointer;
    background-color: transparent;
    border: 1px solid transparent;
    color: var(--text-color);
    transition: all 0.2s ease;
}

.sidebarButton:hover {
    background-color: rgba(229, 161, 0, 0.1);
    color: #e5a100;
    border-color: #e5a100;
}

/* Active state for sidebar buttons */
.sidebarButton[data-active="true"] {
    background-color: #e5a100;
    color: var(--background-color);
    border-color: #e5a100;
}

.sidebarButton[data-active="true"]:hover {
    background-color: #e5a100;
    opacity: 0.9;
    color: var(--background-color);
}

.sidebarButton svg {
    width: 20px;
    height: 20px;
    stroke-width: 2px;
}

/* Dark theme variables */
:root[data-theme="dark"] {
    --background-color: #000000;
    --text-color: #ffffff;
    --text-color-secondary: rgba(255, 255, 255, 0.6);
    --primary-color: #e5a100;
    --hover-color: rgba(229, 161, 0, 0.1);
    --border-color: rgba(229, 161, 0, 0.2);
    --shadow-color: rgba(0, 0, 0, 0.3);
}

/* Light theme variables */
:root[data-theme="light"] {
    --background-color: #ffffff;
    --text-color: #0a2540;
    --text-color-secondary: rgba(10, 37, 64, 0.6);
    --primary-color: #e5a100;
    --hover-color: rgba(229, 161, 0, 0.1);
    --border-color: rgba(229, 161, 0, 0.2);
    --shadow-color: rgba(0, 0, 0, 0.1);
}

/* Mobile adjustments */
@media (max-width: 768px) {
    .leftSidebar {
        padding: 6px;
        gap: 6px;
    }

    .sidebarButton {
        width: 32px;
        height: 32px;
    }

    .sidebarButton svg {
        width: 18px;
        height: 18px;
    }

    .content .sidebar {
        margin-left: 40px;
    }
}

@media (max-width: 680px) {
    .content {
        flex-direction: column-reverse;
        height: 0;

        & .viewport {
            height: 100px;
            width: 100%;
        }

        & .sidebar {
            flex: 1 1 auto;
            width: 100%;
            margin-left: 0;
        }
    }

    .leftSidebar {
        position: fixed;
        left: 0;
        top: auto;
        bottom: 0;
        transform: none;
        width: 100%;
        flex-direction: row;
        justify-content: center;
        border-radius: 8px 8px 0 0;
        border: 1px solid var(--border-color);
        border-bottom: none;
    }
}

.scriptContainer {
    position: fixed;
    left: 60px;
    top: 50%;
    transform: translateY(-50%);
    width: 400px;
    max-width: calc(100vw - 80px);
    height: 500px;
    max-height: calc(100vh - 40px);
}

/* Ensure the main content area (viewport/sidebar) takes the remaining width when chat is visible. */
